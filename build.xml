<?xml version="1.0" encoding="UTF-8"?>

<project name="TKSWeb" default="build">
 <property name="targetdir" value="${targetdir}" />
 <property name="sourcedir" value="${sourcedir}" />
 
 <target name="build" depends="clean, static, deploy" />

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/phpcs"/>
  <delete dir="${basedir}/pdepend"/>
  <delete dir="${basedir}/messdetector.xml"/>
 </target>
 
 <target name="deploy" depends="prepare">
	<copy todir="${targetdir}" overwrite="true">
		<fileset dir="${basedir}">
			<exclude name="phpcs/**" />
			<exclude name="pdepend/**" />
			<exclude name="messdetector.xml" />
			<exclude name=".buildpath" />
			<exclude name=".project" />
			<exclude name=".gitignore" />
			<exclude name=".settings/*" />
			<exclude name="assets/**" />
			<exclude name="protected/config/*" />
			<exclude name="protected/runtime/application.log" />
			<!-- <exclude name="addons/*" />
			<exclude name="config/cache-path" />
			<exclude name="config/config-path" />
			<exclude name="bin/luceneserver/KnowledgeTreeIndexer.properties" />
			<exclude name="admin.php" /> -->
		</fileset>
	</copy>
 </target>

 <target name="clone">
	<copy todir="${targetdir}" overwrite="true">
		<fileset dir="${sourcedir}">
			<exclude name="phpcs/**" />
			<exclude name="pdepend/**" />
			<exclude name="messdetector.xml" />
			<exclude name=".buildpath" />
			<exclude name=".project" />
			<exclude name=".gitignore" />
			<exclude name=".settings/*" />
			<exclude name="assets/**" />
			<exclude name="protected/config/*" />
			<exclude name="protected/runtime/application.log" />
			<!-- <exclude name="addons/*" />
			<exclude name="config/cache-path" />
			<exclude name="config/config-path" />
			<exclude name="bin/luceneserver/KnowledgeTreeIndexer.properties" />
			<exclude name="admin.php" /> -->
		</fileset>
	</copy>
 </target>

<target name="init">
	<mkdir dir="${basedir}/phpcs/"/>
	<mkdir dir="${basedir}/pdepend/"/>
</target>

<target name="static" depends="init, phpmd, pdepend">
</target>

<!-- <target name="phpcs">
	<exec executable="/usr/share/pear/bin/phpcs"> 
		<arg line="- - report=checkstyle
              			- - report-file=${basedir}/phpcs/checkstyle.xml
              			- - standard=Zend
              			${basedir}" />
	</exec>
</target> -->

<target name="phpmd">
	<exec executable="/usr/share/pear/bin/phpmd">
		<arg line="
				 . xml codesize,unusedcode,naming,design --reportfile ${basedir}/messdetector.xml --exclude Tests/
			" />
	</exec>
</target>

<target name="pdepend">
	<exec executable="/usr/share/pear/bin/pdepend">
		<arg line="
			--jdepend-xml=${basedir}/pdepend/jdepend.xml 
			--jdepend-chart=${basedir}/pdepend/dependencies.svg 
			--overview-pyramid=${basedir}/pdepend/overview-pyramid.svg 
			--ignore=Tests/ 
			.
		" />
	</exec>
</target>
 
 <!-- ,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit -->
 <!--<target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit"/> -->

 <!-- <target name="tools-parallel" description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
   <antcall target="phpdox"/>
  </parallel>
 </target> -->

 <target name="prepare" depends="clean" description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <mkdir dir="${basedir}/build/phpdox"/>
 </target>

 <!-- <target name="lint" description="Perform syntax check of sourcecode files">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/src">
    <include name="**/*.php" />
    <modified />
   </fileset>

   <fileset dir="${basedir}/tests">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="- - log-csv" />
   <arg value="${basedir}/build/logs/phploc.csv" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="pdepend" description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="- - jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="- - jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="- - overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg path="${basedir}/src" />
   <arg value="text" />
   <arg value="${basedir}/build/phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}/src" />
   <arg value="xml" />
   <arg value="${basedir}/build/phpmd.xml" />
   <arg value="- - reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="- - standard=${basedir}/build/phpcs.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="- - report=checkstyle" />
   <arg value="- - report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="- - standard=${basedir}/build/phpcs.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="- - log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpdox" description="Generate API documentation using phpDox">
  <exec executable="phpdox"/>
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="phpunit" failonerror="true"/>
 </target> -->
</project>